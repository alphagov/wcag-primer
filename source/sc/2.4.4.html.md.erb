---
title: 2.4.4 Link Purpose (In Context) (A)
---

# <%= current_page.data.title %>

## What WCAG says:

> "The purpose of each link can be determined from the link text alone or from the link text together with its programmatically determined link context" (with one exception)

[Understanding 2.4.4 Link Purpose (In Context)](https://www.w3.org/WAI/WCAG22/Understanding/link-purpose-in-context)

## What this means

Every link must have text which describes its purpose within its immediate context. The text does not have to be visible, but it must be conveyed to assistive technologies.

## Why it matters

This makes sure that screen reader users can understand the purpose of links in their context, and that speech recognition users can target links accurately using voice commands.

## How to check

The accessible name is the name used by assistive technologies such as screen readers and voice control tools. To find the accessible name of each link, you can use:

* your browser's developer tools
* a screen reader

Check that each link describes the link's purpose. If the link text itself is not enough to understand the purpose, then also check its immediate context, such as the same paragraph, list item, table cell or an associated table header.

Automated tools such as Axe can detect links with no text, but they cannot determine whether link text is appropriate when it exists.

[How to test in detail for 2.4.4 Link Purpose (in context)](https://github.com/alphagov/wcag-primer/wiki/2.4.4)

## Good examples

### A self-explanatory link

<figure>
    <%= image_tag "../images/244/244-pass-self-explanatory-link.png", { :alt => 'A "Financial support" link after a paragraph of text.' } %>
</figure>

Ideally, all links should make sense out of context. In this case, the "Financial support" link does not depend on the previous text for you to understand it.

### A link that makes sense in context

<figure>
    <%= image_tag "../images/244/244-pass-link-in-context.png", { :alt => 'The text "We provide support to help you manage your finances" with a link on the word "support".' } %>
</figure>

While the link text of "support" is not very specific in itself, the surrounding context makes the link meaningful.

## Common mistakes

### Links with no text

A link fails this criterion if it is an image with no associated text. In this example, the Twitter and Search icons are described as "Unlabeled" when using a screen reader.

<figure>
    <%= image_tag "../images/244/244-fail-links-with-no-name.png", { :alt => 'Instagram and Search icons' } %>
        <figcaption>The accessible names of these links are unreadable symbols rather than text.</figcaption>
</figure>

### Links out of context

The following link has generic text of "Read more" and is not in the same paragraph as the wording leading up to it, meaning it has no immediate context.

<figure>
    <%= image_tag "../images/244/244-fail-read-more.png", { :alt => 'A "read more" link after a paragraph of text introducing an article.' } %>
    <figcaption>In this case, there is no link in the code between the paragraph and the link.</figcaption>
</figure>

## Related success criteria

This success criterion specifically relates to links being descriptive.

* [1.1.1 Non-text Content](1.1.1.html) relates to images having alternative text. If a link only contains an image which fails Non-text Content, it is likely to fail 2.4.4 Link Purpose too.
* [2.4.6 Headings and Labels](2.4.6.html) relates to other components having descriptive labels, not just links.
* [2.5.3 Label in Name](2.5.3.html) requires that the accessible name includes any text that's presented visually.
* [4.1.2 Name, Role, Value](4.1.2.html) requires that links also have an appropriate role.

## Useful links

* [GOV.UK content design guidance: Using links in content](https://www.gov.uk/guidance/content-design/links#using-links-in-content)
